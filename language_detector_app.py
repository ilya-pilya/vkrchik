import streamlit as st
import joblib
import os

st.set_page_config(page_title='–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ —Ç–µ–∫—Å—Ç–∞', layout='centered')

model_path = 'language_classifier.pkl'
vectorizer_path = 'tfidf_vectorizer.pkl'

@st.cache_resource
def load_model_and_vectorizer():
    if not os.path.exists(model_path):
        st.error(f'–§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {model_path}')
        return None, None
    if not os.path.exists(vectorizer_path):
        st.error(f'–§–∞–π–ª –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {vectorizer_path}')
        return None, None
    model = joblib.load(model_path)
    vectorizer = joblib.load(vectorizer_path)
    return model, vectorizer

model, vectorizer = load_model_and_vectorizer()

st.title('–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤–æ–π –≥—Ä—É–ø–ø—ã —Ç–µ–∫—Å—Ç–∞')
st.write('–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –∏–ª–∏ —Ñ—Ä–∞–∑—É, –∏ –º–æ–¥–µ–ª—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —è–∑—ã–∫: –Ω–µ–º–µ—Ü–∫–∏–π **DE**, –≥—Ä–µ—á–µ—Å–∫–∏–π **GR**, —Ç—É—Ä–µ—Ü–∫–∏–π **TR** –∏–ª–∏ —Ä—É—Å—Å–∫–∏–π **RU**')

user_input = st.text_input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç:')

if user_input and model and vectorizer:
    X_input = vectorizer.transform([user_input])
    prediction = model.predict(X_input)[0]

    lang_map = {
        'ger': '–ù–µ–º–µ—Ü–∫–∏–π üá©üá™ (DE)',
        'gre': '–ì—Ä–µ—á–µ—Å–∫–∏–π üá¨üá∑ (GR)',
        'tur': '–¢—É—Ä–µ—Ü–∫–∏–π üáπüá∑ (TR)',
        'rus': '–†—É—Å—Å–∫–∏–π üá∑üá∫ (RU)',
    }

    st.success(f'**–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π —è–∑—ã–∫:** {lang_map.get(prediction, prediction)}')